<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="logica_programa_8h" kind="file" language="C++">
    <compoundname>logicaPrograma.h</compoundname>
    <includedby refid="interface_programa_8c" local="yes">interfacePrograma.c</includedby>
    <includedby refid="lista_8c" local="yes">lista.c</includedby>
    <includedby refid="logica_programa_8c" local="yes">logicaPrograma.c</includedby>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <invincdepgraph>
      <node id="4">
        <label>logicaPrograma.c</label>
        <link refid="logica_programa_8c"/>
      </node>
      <node id="1">
        <label>logicaPrograma.h</label>
        <link refid="logica_programa_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="2">
        <label>interfacePrograma.c</label>
        <link refid="interface_programa_8c"/>
      </node>
      <node id="3">
        <label>lista.c</label>
        <link refid="lista_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="logica_programa_8h_1a6169396bede24747c8bd74141cf1e606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifica_Posicao_Jogada</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>verifica_Posicao_Jogada</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Verifica se a coordenada a utilizar é vizinha da peça atual. Analisa a coordenada para onde se pretende fazer uma jogada, retornando se esta é vizinha última peça ocupada por um jogador. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada a verificar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, caso seja vizinha. False, caso contrário. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logicaPrograma.h" line="16" column="5" bodyfile="logicaPrograma.c" bodystart="9" bodyend="35" declfile="logicaPrograma.h" declline="16" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_programa_8h_1a3ce81cb71b8c83c612a45031aff80b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifica_CASA</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>verifica_CASA</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Verifica se é possivel jogar para a casa, ou seja, se a casa esta VAZIA ou &apos;1&apos; ou &apos;2&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada a verificar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, caso seja VAZIA, &apos;1&apos; ou &apos;2&apos;. False caso seja invalida. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logicaPrograma.h" line="25" column="5" bodyfile="logicaPrograma.c" bodystart="41" bodyend="53" declfile="logicaPrograma.h" declline="25" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_programa_8h_1a9483a3bd0778f067771a4e62af2cce8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifica_PERDEU</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>verifica_PERDEU</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Verifica se o Jogador atual perdeu, isto é se todas as peças a volta são pretas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada em que peça branca se encontra. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, se todas as peças a volta forem pretas. False, caso ainda existam jogadas possiveis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logicaPrograma.h" line="34" column="5" bodyfile="logicaPrograma.c" bodystart="59" bodyend="103" declfile="logicaPrograma.h" declline="34" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_programa_8h_1aeb06f1cae8ee587d20e168f7ca81cbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifica_GANHOU</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>verifica_GANHOU</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Verifica se o Jogador ganhou. Se a coordenada da peça branca corresponde à casa &apos;1&apos; ou &apos;2&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, caso uma das peças atuais sejam &apos;1&apos; ou &apos;2&apos;. Falso, caso seja outra peça qualquer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logicaPrograma.h" line="42" column="5" bodyfile="logicaPrograma.c" bodystart="109" bodyend="119" declfile="logicaPrograma.h" declline="42" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_programa_8h_1a2c0e7f4b070b426a1371bf87c252f434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogada_Intermedia</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogada_Intermedia</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função para fazer a jogada, isto é, procura a peça branca e substitui-a por uma peça preta. Coloca a peça branca na nova coordenada em que foi jogada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada em que se pretende jogar a peça branca. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logicaPrograma.h" line="51" column="6" bodyfile="logicaPrograma.c" bodystart="125" bodyend="139" declfile="logicaPrograma.h" declline="51" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="logica_programa_8h_1ac313d7e553b1e2b5f266acb9bfff8141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogar</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogar</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função principal para jogar. Vai juntar as funções anteriores para mover a peça, verificando se ganhou, perdeu, e se esta vazia. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada a ser jogada. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True, se for possivel jogar. False, caso contrario. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logicaPrograma.h" line="61" column="5" bodyfile="logicaPrograma.c" bodystart="145" bodyend="160" declfile="logicaPrograma.h" declline="61" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_programa_8h_1ac20121a7dcba82453e9add89be129c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void felicitar</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>felicitar</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Verifica qual foi jogador vencedor e felicita-o. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logicaPrograma.h" line="68" column="6" bodyfile="logicaPrograma.c" bodystart="168" bodyend="186" declfile="logicaPrograma.h" declline="68" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Definição de funções auxiliares que realizam, além de deteções dos estados do jogo, as jogadas e atualizações necessárias para o correr do jogo. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#ifndef<sp/>LOGICA_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOGICA_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_programa_8h_1a6169396bede24747c8bd74141cf1e606" kindref="member">verifica_Posicao_Jogada</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_programa_8h_1a3ce81cb71b8c83c612a45031aff80b30" kindref="member">verifica_CASA</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_programa_8h_1a9483a3bd0778f067771a4e62af2cce8d" kindref="member">verifica_PERDEU</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_programa_8h_1aeb06f1cae8ee587d20e168f7ca81cbed" kindref="member">verifica_GANHOU</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_programa_8h_1a2c0e7f4b070b426a1371bf87c252f434" kindref="member">jogada_Intermedia</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_programa_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_programa_8h_1ac20121a7dcba82453e9add89be129c85" kindref="member">felicitar</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="logicaPrograma.h"/>
  </compounddef>
</doxygen>
